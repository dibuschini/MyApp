<!DOCTYPE html>
<html lang="en">
@{
    var dev = HostContext.AppHost.IsDevelopmentEnvironment();
}
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"] - MyApp</title>
    <script>
    let colorScheme = localStorage.getItem('color-scheme')
    setColorScheme()
    function setColorScheme() {
        if (colorScheme === 'dark')
            document.querySelector('html').classList.add('dark')
        else
            document.querySelector('html').classList.remove('dark')
    }
    function toggleDarkMode() {
        colorScheme = colorScheme === 'dark' ? 'light' : 'dark'
        localStorage.setItem('color-scheme', colorScheme)
        setColorScheme()        
    }
    </script>

    <environment include="Development">
        <link rel="stylesheet" href="~/lib/css/font-awesome/css/all.css"/>
    </environment>
    <environment exclude="Development">
        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css"
              asp-fallback-href="~/lib/css/font-awesome/css/all.min.css"
              crossorigin="anonymous">
    </environment>
    <link rel="stylesheet" href="/css/app.css"/>
    <link rel="stylesheet" href="/css/typography.css"/>

    @if (Context.Request.Headers.UserAgent.Any(x => x.Contains("Safari") && !x.Contains("Chrome")))
    {
        <script async src="https://ga.jspm.io/npm:es-module-shims@1.6.3/dist/es-module-shims.js"></script>
    }
    @Html.ImportMap(new()
    {
        ["vue"]                  = ("/lib/mjs/vue.mjs",                 "/lib/mjs/vue.min.mjs"),
        ["@servicestack/client"] = ("/lib/mjs/servicestack-client.mjs", "/lib/mjs/servicestack-client.min.mjs"),
        ["@servicestack/vue"]    = ("/lib/mjs/servicestack-vue.mjs",    "/lib/mjs/servicestack-vue.min.mjs")
    })
    
    @if (dev) {
        <script>window.Server = @await Html.ApiAsJsonAsync(new MetadataApp())</script>
    }
    <script type="module">
    import { useAuth, useMetadata } from "@@servicestack/vue"
    const { signIn } = useAuth()
    signIn(@await Html.ApiAsJsonAsync(new Authenticate()))
    
    const { loadMetadata } = useMetadata()
    loadMetadata({
        olderThan: window.Server ? null : location.search.includes('clear=metadata') ? 0 : 60 * 60 * 1000 //1hr 
    })
    </script>
</head>
<body class="bg-white dark:bg-black dark:text-white">
<header class="border-b border-gray-200 dark:border-gray-600 pr-3">
    <div class="flex flex-wrap items-center">
        <div class="absolute z-10 top-2 sm:left-2 sm:static flex-shrink flex-grow-0">
            <div class="cursor-pointer">
                <a class="navbar-brand flex items-center" href="/">
                    <img class="sm:ml-2 w-12 h-12" src="/img/logo.svg" alt="MyApp logo">
                    <span class="hidden sm:block text-2xl font-semibold">My App</span>
                </a>
            </div>
        </div>
        <div class="flex flex-grow flex-shrink flex-nowrap justify-end items-center">
            <nav hx-boost="true" class="relative flex flex-grow leading-6 font-semibold text-slate-700 dark:text-slate-200">
                <ul class="flex flex-wrap items-center justify-end w-full pb-2 sm:pb-0 m-0">
                    @{
                        var isAuthenticated = await Html.IsAuthenticatedAsync();
                        //var isAdmin = await Html.HasRoleAsync("Admin");

                        async Task RenderNavLink(string controller, string action, string childContent, string cls=null)
                        {
                            <li class="@Html.ClassNames("relative flex flex-wrap just-fu-start m-0",cls)">
                                <a asp-controller="@controller" asp-action="@action"
                                   class="@Html.ClassNames("p-4 flex items-center justify-start mw-full hover:text-sky-500 dark:hover:text-sky-400", Html.MatchesPath(controller) ? "text-blue-700 dark:text-blue-300" : "")">
                                    @Html.Raw(childContent)
                                </a>
                            </li>
                        }

                        async Task RenderLinkButton(string controller, string action, string childContent, string cls = null)
                        {
                            <li class="relative flex flex-wrap just-fu-start m-0">
                                <a asp-controller="@controller" asp-action="@action" class="@(cls ?? Css.SecondaryButton)">
                                    @Html.Raw(childContent)
                                </a>
                            </li>
                        }

                        await RenderNavLink("Blog", "Index", "Blog", "ml-8 sm:ml-0");
                        await RenderNavLink("Home", "Contacts", "Contacts");
                        await RenderNavLink("Home", "AuthExamples", "Auth <span class=\"ml-1 hidden sm:block\">Examples</span>");
                        await RenderNavLink("Home", "Privacy", "Privacy");
                        await RenderNavLink("Manage", "Index", "Account");

                        if (!isAuthenticated)
                            await RenderLinkButton("Account", "Login", "Sign In");
                        if (!isAuthenticated)
                            await RenderLinkButton("Account", "Register", "Sign Up", $"mx-2 {Css.PrimaryButton}");
                    }
                    <li class="relative flex flex-wrap just-fu-start m-0">
                        <span class="dark-mode cursor-pointer" onclick="toggleDarkMode()">
                            <i class="fas fa-adjust"></i>
                        </span>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</header>

<div class="min-h-screen">
    <partial name="_CookieConsentPartial"/>
    <main role="main" class="pb-3 pl-2 sm:pl-0">
        @RenderBody()
    </main>
</div>

<footer class="bg-accent-1 dark:bg-black border-t border-accent-2 dark:border-gray-600">
    <div class="container mx-auto px-5">
        <div class="py-28 flex flex-col lg:flex-row items-center">
            <h3 class="text-4xl lg:text-6xl font-bold tracking-tighter leading-tight text-center lg:text-left mb-10 lg:mb-0 lg:pr-4 lg:w-1/2">A ServiceStack Project</h3>
            <div class="flex flex-col lg:flex-row justify-center items-center lg:pl-4 lg:w-1/2">
                <a href="https://docs.servicestack.net" class="mx-3 bg-black dark:bg-gray-700 hover:bg-white dark:hover:bg-gray-200 hover:text-black border border-black text-white font-bold py-3 px-12 lg:px-8 duration-200 transition-colors mb-6 lg:mb-0">Read Documentation</a>
                <a href="https://github.com/NetCoreTemplates/mvc-tailwind" class="mx-3 font-bold hover:underline">View on GitHub</a>
            </div>
        </div>
    </div>
</footer>

<environment include="Development">
    <script src="~/lib/js/jquery.js"></script>
</environment>
<environment exclude="Development">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.3/jquery.min.js"
            asp-fallback-src="~/lib/js/jquery.min.js"
            asp-fallback-test="window.jQuery"
            crossorigin="anonymous">
    </script>
</environment>
<script src="~/js/site.js" asp-append-version="true"></script>

@await RenderSectionAsync("Scripts", required: false)
</body>
</html>